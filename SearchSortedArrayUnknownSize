// Time Complexity : O(T) index of target
// Space Complexity : O(1) no extra space
// Did this code successfully run on Leetcode : Yes
// Any problem you faced while coding this : No


// Your code here along with comments explaining your approach in three sentences only
/*
define search boundaries
perform binary search
*/

/**
 * // This is ArrayReader's API interface.
 * // You should not implement it, or speculate about its implementation
 * interface ArrayReader {
 *     public int get(int index) {}
 * }
 */

class Solution {
    public int search(ArrayReader reader, int target) {
        if(reader.get(0)==target)
        return 0;

        int left=0;int right=1;
        while(reader.get(right)<=target){
            left=right;
            right=right<<1;
        }

        while(left<=right){
            int mid=left+(right-left)/2;
            if(reader.get(mid)==target)
            return mid;
            if(target<reader.get(mid)){
                right=mid-1;
            }
            else{
                left=mid+1;
            }
        }

        return -1;

    }
}

