class Solution:
    def search(self, nums: List[int], target: int) -> int:
        if nums is None or len(nums) == 0:
            return -1

        n = len(nums)
        low = 0
        high = n - 1

        while low <= high:
            mid = low + (high - low) // 2  # Calculate mid index
            if nums[mid] == target:  # Target found
                return mid

            # Check if the left half is sorted
            if nums[low] <= nums[mid]:
                if nums[low] <= target < nums[mid]:  # Target lies in the left half
                    high = mid - 1
                else:  # Target lies in the right half
                    low = mid + 1
            else:  # Right half is sorted
                if nums[mid] < target <= nums[high]:  # Target lies in the right half
                    low = mid + 1
                else:  # Target lies in the left half
                    high = mid - 1

        return -1  # Target not found
